/* Add these styles at the top of the file, before any other styles */
html,
body {
  background-color: black; /* Set initial background to black */
  margin: 0;
  padding: 0;
}

/* Ensure the body background is set immediately */
body {
  background-color: black;
  color: white;
  font-family: "Inter", sans-serif;
}

:root {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(to bottom, transparent, rgb(var(--background-end-rgb))) rgb(var(--background-start-rgb));
  overflow-x: hidden;
}

html,
body {
  background-color: #000000;
}

@layer base {
  :root {
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;
    --card: 0 0% 0%;
    --card-foreground: 0 0% 100%;
    --popover: 0 0% 0%;
    --popover-foreground: 0 0% 100%;
    --primary: 355 100% 54%;
    --primary-foreground: 0 0% 100%;
    --secondary: 0 0% 9%;
    --secondary-foreground: 0 0% 100%;
    --muted: 0 0% 9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 9%;
    --accent-foreground: 0 0% 100%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 100%;
    --border: 0 0% 20%;
    --input: 0 0% 20%;
    --ring: 355 100% 54%;
    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

.dark {
  --background: 0 0% 0%;
  --foreground: 0 0% 100%;
  --card: 0 0% 5%;
  --card-foreground: 0 0% 98%;
  --border: 0 0% 20%;
  --input: 0 0% 15%;
}

/* Add smooth transitions for all elements */
* {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow,
    transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

/* Exclude transitions for specific elements that might cause flickering */
.no-transition,
.no-transition * {
  transition: none !important;
}

body {
  background-color: black;
  color: white;
  font-family: "Inter", sans-serif;
}

.dark body {
  background-color: black;
  color: white;
}

.wave-pattern {
  background-image: url("data:image/svg+xml,%3Csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3Cpattern id='wave' x='0' y='0' width='400' height='200' patternUnits='userSpaceOnUse'%3E%3Cpath d='M0,100 C150,200 250,0 400,100 L400,200 L0,200 Z' fill='%23ff132a' opacity='0.2'/%3E%3C/pattern%3E%3C/defs%3E%3Crect width='100%25' height='100%25' fill='url(%23wave)'/%3E%3C/svg%3E");
  background-size: 400px 200px;
}

.glow-sphere {
  box-shadow: 0 0 60px 20px rgba(255, 19, 42, 0.5);
}

.timeline-dot::before {
  content: "";
  position: absolute;
  left: -8px;
  top: 50%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
  background-color: #ff132a;
  border-radius: 50%;
}

.timeline-line {
  position: relative;
}

.timeline-line::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 1px;
  background-color: rgba(255, 19, 42, 0.5);
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  .scrollbar-hide {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  .scrollbar-hide::-webkit-scrollbar {
    display: none; /* Chrome, Safari and Opera */
  }
}

:root {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(to bottom, transparent, rgb(var(--background-end-rgb))) rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Add custom animation for the logo carousel */
@keyframes marquee {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

.animate-marquee {
  animation: marquee 30s linear infinite;
  white-space: nowrap;
}

/* World Map Styles */
.world-map {
  filter: drop-shadow(0 0 15px rgba(220, 38, 38, 0.15));
}

.world-map path {
  transition: fill 0.3s ease, stroke 0.3s ease, stroke-width 0.3s ease, filter 0.3s ease;
}

.world-map path:hover {
  cursor: pointer;
}

.world-map text {
  font-family: inherit;
}

.letstop-tooltip {
  background: linear-gradient(135deg, rgba(0, 0, 0, 0.95), rgba(20, 20, 20, 0.98));
  color: white;
  padding: 10px 14px;
  border-radius: 8px;
  font-weight: 500;
  font-size: 14px;
  box-shadow: 0 4px 20px rgba(220, 38, 38, 0.25), 0 0 0 1px rgba(220, 38, 38, 0.15);
  backdrop-filter: blur(10px);
  white-space: nowrap;
  transform: translateY(0);
  animation: tooltip-appear 0.2s cubic-bezier(0.16, 1, 0.3, 1);
  border: 1px solid rgba(220, 38, 38, 0.2);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  margin-bottom: 8px;
  min-width: 140px;
  text-align: center;
}

@keyframes tooltip-appear {
  from {
    opacity: 0;
    transform: translateY(8px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Add the grow-shrink animation to globals.css */
@keyframes grow-shrink {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.08);
  }
  100% {
    transform: scale(1);
  }
}

.animate-grow-shrink {
  animation: grow-shrink 8s infinite ease-in-out;
}

@keyframes pulse-slow {
  0% {
    opacity: 0.9;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.9;
  }
}

.animate-pulse-slow {
  animation: pulse-slow 4s infinite ease-in-out;
}

/* Floating animations */
@keyframes float-slow {
  0%,
  100% {
    transform: translateY(0) translateX(0);
  }
  25% {
    transform: translateY(-10px) translateX(10px);
  }
  50% {
    transform: translateY(0) translateX(20px);
  }
  75% {
    transform: translateY(10px) translateX(10px);
  }
}

@keyframes float-medium {
  0%,
  100% {
    transform: translateY(0) translateX(0);
  }
  25% {
    transform: translateY(-15px) translateX(15px);
  }
  50% {
    transform: translateY(0) translateX(30px);
  }
  75% {
    transform: translateY(15px) translateX(15px);
  }
}

@keyframes float-fast {
  0%,
  100% {
    transform: translateY(0) translateX(0);
  }
  25% {
    transform: translateY(-20px) translateX(20px);
  }
  50% {
    transform: translateY(0) translateX(40px);
  }
  75% {
    transform: translateY(20px) translateX(20px);
  }
}

.animate-float-slow {
  animation: float-slow 20s ease-in-out infinite;
}

.animate-float-medium {
  animation: float-medium 15s ease-in-out infinite;
}

.animate-float-fast {
  animation: float-fast 10s ease-in-out infinite;
}

/* Cursor blink animation */
@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

.animate-blink {
  animation: blink 1s step-end infinite;
}

/* Updated smooth grow-shrink animation */
@keyframes smooth-grow-shrink {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.5);
  }
  100% {
    transform: scale(1);
  }
}

.grow-shrink-animation {
  animation: smooth-grow-shrink 6s infinite ease-in-out;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.hide-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

/* Add these styles for the horizontal scrolling container */
/* Add them after the existing .hide-scrollbar class definitions */

/* Smooth scrolling for touch devices */
@media (hover: none) {
  .snap-x {
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
  }

  .snap-center {
    scroll-snap-align: center;
  }
}

/* Add subtle scroll indicator animation */
@keyframes scroll-hint {
  0% {
    left: 0;
  }
  100% {
    left: calc(100% - 16px);
  }
}

.scroll-hint {
  animation: scroll-hint 1.5s ease-in-out infinite;
}

.animate-scroll-hint {
  animation: scroll-hint 2s infinite linear;
}

/* Modern, subtle hover effects */
.hover-subtle {
  transition: all 0.3s ease;
}

.hover-subtle:hover {
  transform: translateY(-2px);
}

/* Button hover effect */
.button-hover {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.button-hover::after {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: all 0.5s ease;
}

.button-hover:hover::after {
  left: 100%;
}

/* Leaderboard styles */
.leaderboard-item {
  transition: all 0.3s ease;
}

.leaderboard-item:hover {
  transform: translateX(5px);
  background-color: rgba(255, 19, 42, 0.1);
}

/* Roadmap timeline */
.roadmap-timeline {
  position: relative;
}

.roadmap-timeline::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 2px;
  background-color: rgba(255, 19, 42, 0.3);
}

.roadmap-item {
  position: relative;
}

.roadmap-item::before {
  content: "";
  position: absolute;
  left: -9px;
  top: 24px;
  width: 16px;
  height: 16px;
  background-color: #ff132a;
  border-radius: 50%;
  z-index: 1;
}

/* Token allocation chart */
.token-allocation-item {
  transition: all 0.3s ease;
}

.token-allocation-item:hover {
  transform: translateX(5px);
}

/* Subscription plan cards */
.plan-card {
  transition: all 0.3s ease;
  border: 1px solid rgba(255, 19, 42, 0.2);
}

.plan-card:hover {
  transform: translateY(-5px);
  border-color: rgba(255, 19, 42, 0.5);
  box-shadow: 0 10px 30px rgba(255, 19, 42, 0.1);
}

.plan-card.featured {
  border: 2px solid rgba(255, 19, 42, 0.5);
  box-shadow: 0 10px 30px rgba(255, 19, 42, 0.2);
}

/* FAQ accordion */
.faq-item {
  transition: all 0.3s ease;
}

.dark .faq-item {
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.light .faq-item {
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.faq-item:hover {
  background-color: rgba(255, 19, 42, 0.05);
}

.faq-answer {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.5s ease;
}

.faq-item.active .faq-answer {
  max-height: 500px;
}

/* App features */
.app-feature {
  transition: all 0.3s ease;
}

.app-feature:hover {
  transform: translateY(-5px);
}

/* Language selector */
.language-selector {
  position: relative;
}

.language-options {
  position: absolute;
  top: 100%;
  right: 0;
  background-color: rgba(255, 255, 255, 0.95);
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  padding: 8px 0;
  width: 150px;
  z-index: 50;
  opacity: 0;
  visibility: hidden;
  transform: translateY(10px);
  transition: all 0.3s ease;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.dark .language-options {
  background-color: rgba(20, 20, 20, 0.95);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
}

.language-selector:hover .language-options {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.language-option {
  padding: 8px 16px;
  cursor: pointer;
  transition: all 0.2s ease;
  color: #333;
}

.dark .language-option {
  color: #fff;
}

.language-option:hover {
  background-color: rgba(255, 19, 42, 0.1);
}

/* Glowing text effect */
.text-glow {
  text-shadow: 0 0 10px rgba(255, 19, 42, 0.7), 0 0 20px rgba(255, 19, 42, 0.5), 0 0 30px rgba(255, 19, 42, 0.3);
}

/* Light mode doesn't need as much glow */
.light .text-glow {
  text-shadow: 0 0 5px rgba(255, 19, 42, 0.5), 0 0 10px rgba(255, 19, 42, 0.3);
}

/* Gradient text */
.text-gradient {
  background: linear-gradient(90deg, #ff132a, #ff5a5a);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  color: transparent;
}

/* Add these new animations to globals.css */
@keyframes pulse-glow {
  0%,
  100% {
    box-shadow: 0 0 20px 5px rgba(255, 19, 42, 0.3);
  }
  50% {
    box-shadow: 0 0 40px 10px rgba(255, 19, 42, 0.5);
  }
}

.animate-pulse-glow {
  animation: pulse-glow 4s infinite ease-in-out;
}

/* Light mode specific styles */
.light .bg-card {
  background-color: rgba(255, 255, 255, 0.8);
  border: 1px solid rgba(0, 0, 0, 0.1);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
}

.light .text-card {
  color: #333;
}

.light .border-card {
  border-color: rgba(0, 0, 0, 0.1);
}

/* Dark mode specific styles */
.dark .bg-card {
  background-color: rgba(0, 0, 0, 0.6);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.dark .text-card {
  color: #fff;
}

.dark .border-card {
  border-color: rgba(255, 255, 255, 0.1);
}

/* Theme toggle animation */
.theme-toggle-icon {
  transform-origin: center;
  transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55);
}

.theme-toggle-icon.sun {
  transform: rotate(0deg) scale(1);
}

.theme-toggle-icon.moon {
  transform: rotate(360deg) scale(1);
}

/* New background effects */
@keyframes subtle-float {
  0%,
  100% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(5px, -5px);
  }
  50% {
    transform: translate(10px, 0);
  }
  75% {
    transform: translate(5px, 5px);
  }
}

.subtle-float {
  animation: subtle-float 20s infinite ease-in-out;
}

@keyframes glow-pulse {
  0%,
  100% {
    filter: drop-shadow(0 0 15px rgba(255, 30, 30, 0.3));
  }
  50% {
    filter: drop-shadow(0 0 25px rgba(255, 30, 30, 0.5));
  }
}

.glow-pulse {
  animation: glow-pulse 4s infinite ease-in-out;
}

/* Enhanced depth effects */
.depth-layer-1 {
  z-index: -10;
}

.depth-layer-2 {
  z-index: -20;
}

.depth-layer-3 {
  z-index: -30;
}

/* Particle effects */
.particle-container {
  position: relative;
  overflow: hidden;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  border-radius: 50%;
  background-color: rgba(255, 30, 30, 0.6);
  pointer-events: none;
}

/* Light beam effect */
.light-beam {
  position: absolute;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, rgba(255, 30, 30, 0.5), transparent);
  transform: rotate(45deg);
  filter: blur(5px);
  opacity: 0.3;
}
